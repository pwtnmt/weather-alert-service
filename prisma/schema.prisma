// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[] @relation("UserRefreshTokens")
  subscription  Subscription[] @relation("UserSubscription")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation("UserRefreshTokens", fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  revoked   Boolean  @default(false)
}

model City {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  code         Int            @unique
  latitude     Float
  longitude    Float
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  subscription Subscription[] @relation("CitySubscription")
}

model Subscription {
  id        Int      @id @default(autoincrement())
  cityId    Int
  userId    Int
  City      City     @relation("CitySubscription", fields: [cityId], references: [id], onDelete: Cascade)
  user      User     @relation("UserSubscription", fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, cityId])
}
